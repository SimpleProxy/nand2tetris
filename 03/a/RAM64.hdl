// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:

    DMux8Way (in=load, sel=address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM8 (in=in, address=address[3..5], load=a, out=r0);
    RAM8 (in=in, address=address[3..5], load=b, out=r1);
    RAM8 (in=in, address=address[3..5], load=c, out=r2);
    RAM8 (in=in, address=address[3..5], load=d, out=r3);
    RAM8 (in=in, address=address[3..5], load=e, out=r4);
    RAM8 (in=in, address=address[3..5], load=f, out=r5);
    RAM8 (in=in, address=address[3..5], load=g, out=r6);
    RAM8 (in=in, address=address[3..5], load=h, out=r7);

    Mux8Way16 (a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);

}
