// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[0..2], a=ri0, b=ri1, c=ri2, d=ri3, e=ri4, f=ri5, g=ri6, h=ri7);

    RAM512 (in=in, load=ri0, address=address[3..11], out=ro0);
    RAM512 (in=in, load=ri1, address=address[3..11], out=ro1);
    RAM512 (in=in, load=ri2, address=address[3..11], out=ro2);
    RAM512 (in=in, load=ri3, address=address[3..11], out=ro3);
    RAM512 (in=in, load=ri4, address=address[3..11], out=ro4);
    RAM512 (in=in, load=ri5, address=address[3..11], out=ro5);
    RAM512 (in=in, load=ri6, address=address[3..11], out=ro6);
    RAM512 (in=in, load=ri7, address=address[3..11], out=ro7);

    Mux8Way16 (a=ro0, b=ro1, c=ro2, d=ro3, e=ro4, f=ro5, g=ro6, h=ro7, sel=address[0..2], out=out);
}
